/////////////////////////////////////////////////////////////////////////////
// Name:        ngpodwcc_mainframe.cpp
// Purpose:     
// Author:      Rex Zhang
// Modified by: 
// Created:     07/02/2006 17:00:41
// RCS-ID:      
// Copyright:   cooooooooooooopy
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 07/02/2006 17:00:41

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
#pragma implementation "ngpodwcc_mainframe.h"
#endif

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
#include "ngpodwcc_aboutdialog.h"
////@end includes

#include "ngpodwcc_mainframe.h"

////@begin XPM images
////@end XPM images

/*!
 * ngpodwcc_MainFrame type definition
 */

IMPLEMENT_CLASS( ngpodwcc_MainFrame, wxFrame )

/*!
 * ngpodwcc_MainFrame event table definition
 */

BEGIN_EVENT_TABLE( ngpodwcc_MainFrame, wxFrame )

////@begin ngpodwcc_MainFrame event table entries
    EVT_BUTTON( ID_BUTTON_ABOUT, ngpodwcc_MainFrame::OnButtonAboutClick )

    EVT_BUTTON( ID_BUTTON_QUIT, ngpodwcc_MainFrame::OnButtonQuitClick )

////@end ngpodwcc_MainFrame event table entries

END_EVENT_TABLE()

/*!
 * ngpodwcc_MainFrame constructors
 */

ngpodwcc_MainFrame::ngpodwcc_MainFrame( )
{
}

ngpodwcc_MainFrame::ngpodwcc_MainFrame( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Create( parent, id, caption, pos, size, style );
}

/*!
 * ngpodwcc_MainFrame creator
 */

bool ngpodwcc_MainFrame::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin ngpodwcc_MainFrame member initialisation
////@end ngpodwcc_MainFrame member initialisation

////@begin ngpodwcc_MainFrame creation
    wxFrame::Create( parent, id, caption, pos, size, style );

    CreateControls();
    Centre();
////@end ngpodwcc_MainFrame creation
    return true;
}

/*!
 * Control creation for ngpodwcc_MainFrame
 */

void ngpodwcc_MainFrame::CreateControls()
{    
////@begin ngpodwcc_MainFrame content construction
    ngpodwcc_MainFrame* itemFrame1 = this;

    wxPanel* itemPanel2 = new wxPanel( itemFrame1, ID_PANEL, wxDefaultPosition, wxDefaultSize, wxNO_BORDER|wxTAB_TRAVERSAL );

    wxBoxSizer* itemBoxSizer3 = new wxBoxSizer(wxVERTICAL);
    itemPanel2->SetSizer(itemBoxSizer3);

    wxStaticText* itemStaticText4 = new wxStaticText( itemPanel2, wxID_STATIC, _("\nNational Geographic Photo Of the Day Wallpaper Conterl Center\n"), wxDefaultPosition, wxDefaultSize, 0 );
    itemStaticText4->SetFont(wxFont(9, wxSWISS, wxNORMAL, wxBOLD, false, _T("Tahoma")));
    itemBoxSizer3->Add(itemStaticText4, 0, wxALIGN_CENTER_HORIZONTAL|wxALL|wxADJUST_MINSIZE, 5);

    wxNotebook* itemNotebook5 = new wxNotebook( itemPanel2, ID_NOTEBOOK, wxDefaultPosition, wxDefaultSize, wxNB_TOP );

    wxPanel* itemPanel6 = new wxPanel( itemNotebook5, ID_PANEL1, wxDefaultPosition, wxDefaultSize, wxNO_BORDER|wxTAB_TRAVERSAL );
    wxFlexGridSizer* itemFlexGridSizer7 = new wxFlexGridSizer(2, 3, 0, 0);
    itemPanel6->SetSizer(itemFlexGridSizer7);

    itemFlexGridSizer7->Add(5, 5, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemFlexGridSizer7->Add(5, 5, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemFlexGridSizer7->Add(5, 5, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText11 = new wxStaticText( itemPanel6, wxID_STATIC, _("PodBasePath"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(itemStaticText11, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL|wxADJUST_MINSIZE, 5);

    wxTextCtrl* itemTextCtrl12 = new wxTextCtrl( itemPanel6, ID_TEXTCTRL, _T(""), wxDefaultPosition, wxSize(200, -1), 0 );
    itemFlexGridSizer7->Add(itemTextCtrl12, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxButton* itemButton13 = new wxButton( itemPanel6, ID_BUTTON4, _("Button"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(itemButton13, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText14 = new wxStaticText( itemPanel6, wxID_STATIC, _("PodDatabaseName"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(itemStaticText14, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL|wxADJUST_MINSIZE, 5);

    wxTextCtrl* itemTextCtrl15 = new wxTextCtrl( itemPanel6, ID_TEXTCTRL1, _T(""), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(itemTextCtrl15, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxButton* itemButton16 = new wxButton( itemPanel6, ID_BUTTON5, _("Button"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(itemButton16, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText17 = new wxStaticText( itemPanel6, wxID_STATIC, _("PodPicturePath"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(itemStaticText17, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL|wxADJUST_MINSIZE, 5);

    wxTextCtrl* itemTextCtrl18 = new wxTextCtrl( itemPanel6, ID_TEXTCTRL2, _T(""), wxDefaultPosition, wxSize(200, -1), 0 );
    itemFlexGridSizer7->Add(itemTextCtrl18, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxButton* itemButton19 = new wxButton( itemPanel6, ID_BUTTON6, _("Button"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(itemButton19, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText20 = new wxStaticText( itemPanel6, wxID_STATIC, _("Next POD Day"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(itemStaticText20, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL|wxADJUST_MINSIZE, 5);

    wxDatePickerCtrl* itemDatePickerCtrl21 = new wxDatePickerCtrl( itemPanel6, ID_DATECTRL, wxDateTime(), wxDefaultPosition, wxDefaultSize, wxDP_DROPDOWN|wxDP_DEFAULT );
    wxDateTime minDateitemDatePickerCtrl21(1, (wxDateTime::Month) 2, 2001);
    wxDateTime maxDateitemDatePickerCtrl21;
    itemDatePickerCtrl21->SetRange(minDateitemDatePickerCtrl21, maxDateitemDatePickerCtrl21);
    itemFlexGridSizer7->Add(itemDatePickerCtrl21, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxButton* itemButton22 = new wxButton( itemPanel6, ID_BUTTON9, _("Button"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer7->Add(itemButton22, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemFlexGridSizer7->Add(5, 5, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemFlexGridSizer7->Add(5, 5, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemNotebook5->AddPage(itemPanel6, _("NGPOD Source Setting"));

    wxPanel* itemPanel25 = new wxPanel( itemNotebook5, ID_PANEL2, wxDefaultPosition, wxDefaultSize, wxNO_BORDER|wxTAB_TRAVERSAL );
    wxStaticText* itemStaticText26 = new wxStaticText( itemPanel25, wxID_STATIC, _("Comming soon..."), wxDefaultPosition, wxDefaultSize, 0 );

    itemNotebook5->AddPage(itemPanel25, _("Image Convert Setting"));

    wxPanel* itemPanel27 = new wxPanel( itemNotebook5, ID_PANEL3, wxDefaultPosition, wxDefaultSize, wxNO_BORDER|wxTAB_TRAVERSAL );
    wxFlexGridSizer* itemFlexGridSizer28 = new wxFlexGridSizer(2, 2, 0, 0);
    itemPanel27->SetSizer(itemFlexGridSizer28);

    itemFlexGridSizer28->Add(5, 5, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemFlexGridSizer28->Add(5, 5, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText31 = new wxStaticText( itemPanel27, wxID_STATIC, _("Screen Width x Height"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer28->Add(itemStaticText31, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL|wxADJUST_MINSIZE, 5);

    wxString itemComboBox32Strings[] = {
        _("640x480"),
        _("800x600"),
        _("1024x768"),
        _("couuuuuuuu")
    };
    wxComboBox* itemComboBox32 = new wxComboBox( itemPanel27, ID_COMBOBOX, _("800x600"), wxDefaultPosition, wxDefaultSize, 4, itemComboBox32Strings, wxCB_READONLY );
    itemComboBox32->SetStringSelection(_("800x600"));
    itemFlexGridSizer28->Add(itemComboBox32, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText33 = new wxStaticText( itemPanel27, wxID_STATIC, _("Screen Width"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer28->Add(itemStaticText33, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL|wxADJUST_MINSIZE, 5);

    wxTextCtrl* itemTextCtrl34 = new wxTextCtrl( itemPanel27, ID_TEXTCTRL4, _T(""), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer28->Add(itemTextCtrl34, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText35 = new wxStaticText( itemPanel27, wxID_STATIC, _("Screen Height"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer28->Add(itemStaticText35, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL|wxADJUST_MINSIZE, 5);

    wxTextCtrl* itemTextCtrl36 = new wxTextCtrl( itemPanel27, ID_TEXTCTRL5, _T(""), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer28->Add(itemTextCtrl36, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText37 = new wxStaticText( itemPanel27, wxID_STATIC, _("ScreenPicturePath"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer28->Add(itemStaticText37, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL|wxADJUST_MINSIZE, 5);

    wxTextCtrl* itemTextCtrl38 = new wxTextCtrl( itemPanel27, ID_TEXTCTRL6, _("C:\\WINNT"), wxDefaultPosition, wxSize(200, -1), 0 );
    itemFlexGridSizer28->Add(itemTextCtrl38, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText39 = new wxStaticText( itemPanel27, wxID_STATIC, _("ScreenPictureName"), wxDefaultPosition, wxDefaultSize, 0 );
    itemFlexGridSizer28->Add(itemStaticText39, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL|wxADJUST_MINSIZE, 5);

    wxTextCtrl* itemTextCtrl40 = new wxTextCtrl( itemPanel27, ID_TEXTCTRL3, _("POD_Wallpaper.bmp"), wxDefaultPosition, wxSize(200, -1), 0 );
    itemFlexGridSizer28->Add(itemTextCtrl40, 0, wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemFlexGridSizer28->Add(5, 5, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemFlexGridSizer28->Add(5, 5, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemNotebook5->AddPage(itemPanel27, _("Screen Info Setting"));

    itemBoxSizer3->Add(itemNotebook5, 0, wxGROW|wxALL, 5);

    wxBoxSizer* itemBoxSizer43 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer3->Add(itemBoxSizer43, 0, wxALIGN_LEFT|wxALL, 5);

    wxButton* itemButton44 = new wxButton( itemPanel2, ID_BUTTON_RELOAD_CONFIG, _("Reload Config"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer43->Add(itemButton44, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxButton* itemButton45 = new wxButton( itemPanel2, ID_BUTTON_RESTORE_DEFAULT, _("Restore Default"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer43->Add(itemButton45, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxButton* itemButton46 = new wxButton( itemPanel2, ID_BUTTON_SAVE_CONFIG, _("Save Config"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer43->Add(itemButton46, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticLine* itemStaticLine47 = new wxStaticLine( itemPanel2, wxID_STATIC, wxDefaultPosition, wxDefaultSize, wxLI_VERTICAL );
    itemBoxSizer3->Add(itemStaticLine47, 0, wxGROW|wxALL, 5);

    wxBoxSizer* itemBoxSizer48 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer3->Add(itemBoxSizer48, 0, wxALIGN_RIGHT|wxALL, 5);

    wxButton* itemButton49 = new wxButton( itemPanel2, ID_BUTTON_ABOUT, _("About"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer48->Add(itemButton49, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxButton* itemButton50 = new wxButton( itemPanel2, ID_BUTTON_QUIT, _("Quit"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer48->Add(itemButton50, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

////@end ngpodwcc_MainFrame content construction
}

/*!
 * Should we show tooltips?
 */

bool ngpodwcc_MainFrame::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap ngpodwcc_MainFrame::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin ngpodwcc_MainFrame bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end ngpodwcc_MainFrame bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon ngpodwcc_MainFrame::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin ngpodwcc_MainFrame icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end ngpodwcc_MainFrame icon retrieval
}
/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BUTTON2
 */

void ngpodwcc_MainFrame::OnButtonAboutClick( wxCommandEvent& event )
{
////@begin wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BUTTON2 in ngpodwcc_MainFrame.
    // Before editing this code, remove the block markers.
    ngpodwcc_aboutdialog* window = new ngpodwcc_aboutdialog(NULL, ID_DIALOG_ABOUT, _("Dialog"));
    window->Show(true);
////@end wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BUTTON2 in ngpodwcc_MainFrame. 
}


/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BUTTON3
 */

void ngpodwcc_MainFrame::OnButtonQuitClick( wxCommandEvent& event )
{
////@begin wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BUTTON3 in ngpodwcc_MainFrame.
    // Before editing this code, remove the block markers.
    Destroy();
////@end wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BUTTON3 in ngpodwcc_MainFrame. 
}


